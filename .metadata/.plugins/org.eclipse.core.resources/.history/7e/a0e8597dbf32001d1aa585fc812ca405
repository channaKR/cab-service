package com.go.cheeta.controller;

import java.io.IOException;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.go.cheeta.model.Booking;
import com.go.cheeta.model.DriverClass;
import com.go.cheeta.model.Vehicle;
import com.go.cheeta.service.DriverService;
import com.go.cheeta.service.VehicleService;
import java.util.Properties;
import java.util.Random;


public class DriverController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
	}

	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String action=request.getParameter("action");
		   if(action.equals("bookingorder")) {
			   viewOrders(request,response);
			   
		   }
	}

	
	
	private void viewOrders(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {
		String message= "";
		DriverService service=new DriverService();
		DriverClass driver=new DriverClass();
		Booking booking=new Booking();
		
		try {
			
			driver.setNicnumber(request.getParameter("drivernic"));
			List<Booking>bookingorders=service.viewOrdersDriver(booking, driver);
			
			if(bookingorders.isEmpty()) {
				

			}
			request.setAttribute("orders",bookingorders);
		} catch (ClassNotFoundException | SQLException e) {
			// TODO Auto-generated catch block
			message=e.getMessage();
		}
		request.setAttribute("message", message);
		RequestDispatcher rd=request.getRequestDispatcher("view-order.jsp");
		rd.forward(request, response);
	}
	
	
	public void x() {
		
	    public String getRandom() {
	        Random rnd = new Random();
	        int number = rnd.nextInt(999999);
	        return String.format("%06d", number);
	    }

	    //send email to the user email
	    public boolean sendEmail(User user) {
	        boolean test = false;

	        String toEmail = user.getEmail();
	        String fromEmail = "youremail@myself.com";
	        String password = "youremailpassword";

	        try {

	            // your host email smtp server details
	            Properties pr = new Properties();
	            pr.setProperty("mail.smtp.host", "smtp.mail.com");
	            pr.setProperty("mail.smtp.port", "587");
	            pr.setProperty("mail.smtp.auth", "true");
	            pr.setProperty("mail.smtp.starttls.enable", "true");
	            pr.put("mail.smtp.socketFactory.port", "587");
	            pr.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
	 
	            //get session to authenticate the host email address and password
	            Session session = Session.getInstance(pr, new Authenticator() {
	                @Override
	                protected PasswordAuthentication getPasswordAuthentication() {
	                    return new PasswordAuthentication(fromEmail, password);
	                }
	            });

	            //set email message details
	            Message mess = new MimeMessage(session);

	    		//set from email address
	            mess.setFrom(new InternetAddress(fromEmail));
	    		//set to email address or destination email address
	            mess.setRecipient(Message.RecipientType.TO, new InternetAddress(toEmail));
	    		
	    		//set email subject
	            mess.setSubject("User Email Verification");
	            
	    		//set message text
	            mess.setText("Registered successfully.Please verify your account using this code: " + user.getCode());
	            //send the message
	            Transport.send(mess);
	            
	            test=true;
	            
	        } catch (Exception e) {
	            e.printStackTrace();
	        }

	        return test;
	    }
	}
}
